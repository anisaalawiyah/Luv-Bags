// import { pool } from "../db.js";

// export const getAllProduct = async (req, res) => {
//     try {
//         const { product_name, brand, price, stock, imageurl } = req.body;
//         const result = await pool.query(
//             "INSERT INTO products (product_name, brand, price, stock, imageurl) VALUES ($1, $2, $3, $4, $5) RETURNING *",
//             [product_name, brand, price, stock, imageurl]
//         );
//         res.status(201).json(result.rows[0]);
//     } catch (error) {
//         console.error('Error adding product:', error);
//         res.status(500).json({ error: 'An error occurred while adding the product' });
//     };
// }

// export const addProduct= async (req, res) => {
//     try {
//         const result = await pool.query("SELECT * FROM products");
//         console.log('Products:', result.rows); // Log data produk
//         res.json(result.rows);
//     } catch (error) {
//         console.error('Error retrieving products:', error);
//         res.status(500).json({ error: 'An error occurred while retrieving products' });
//     }
// }

// // Route untuk memperbarui produk
//     export const updateProduct=  async (req, res) => {
//         const id = parseInt(req.params.id);  // Konversi ID ke integer
//         const { product_name, brand, price, stock, imageurl } = req.body;
    
//         try {
//             // Memastikan nilai default jika stock tidak diberikan
//             const result = await pool.query(
//                 "UPDATE products SET product_name = $1, brand = $2, price = $3, stock = $4, imageurl = $5 WHERE product_id = $6 RETURNING *",
//                 [product_name, brand, price, stock || 0, imageurl, id] // Gunakan stock || 0 untuk nilai default jika stock adalah null
//             );
    
//             if (result.rowCount > 0) {
//                 res.json(result.rows[0]);
//             } else {
//                 res.status(404).json({ error: 'Product not found' });
//             }
//         } catch (error) {
//             console.error('Error updating product:', error);
//             res.status(500).json({ error: 'An error occurred while updating the product' });
//         }
//     }

// // Route untuk menghapus produk
// export const deleteProduct = async (req, res) => {
//     try {
//         const result = await pool.query("DELETE FROM products WHERE product_id = $1 RETURNING *", [req.params.id]);
//         if (result.rowCount === 0) {
//             return res.status(404).json({ error: 'Product not found' });
//         }
//         res.json({ message: 'Product successfully deleted' });
//     } catch (error) {
//         console.error('Error deleting product:', error);
//         res.status(500).json({ error: 'An error occurred while deleting the product' });
//     }
// }

